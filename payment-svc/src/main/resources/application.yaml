spring:
  application:
    name: payment-service

#H2 Configuration
  datasource:
    url: jdbc:h2:mem:paymentdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect

#Vault Configuration - With Spring Boot 2.4+ and Spring Cloud Vault 3+, using bootstrap.yaml is deprecated in favor of keeping all configuration in application.yaml (or .properties) and using the new Config Data API. You can migrate by moving your Vault config to application.yaml and adding:
#  cloud:
#    vault:
#      uri: http://127.0.0.1:8200                          # Vault server URL
#      #token: hvs.UeRA9uUXVXflT5OGoT9Emxih                # Use root token only for dev - Added this token in ENV Var for this app
#      kv:
#        enabled: true
#        backend: secret
#        default-context: PAYMENT-SVC
#
#  config:
#    import: vault://                                      # Automatically import secrets from Vault path

  #KAFKA Configuration
  kafka:
    auto-offset-reset: earliest
    bootstrap-servers: localhost:9092  #my-kafka.kafka.svc.cluster.local:9092    #kubernetes config url
    consumer:
      group-id: payment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

order:
  topic: order-events

server:
  port: 8001

#Okta Configuration
okta:
  oauth2:
    issuer: https://integrator-9957757.okta.com/oauth2/default      #${okta.oauth2.issuer}
    audience: api://default

#Add Eureka Server Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true